mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
plot(height ~ weight , data=data , col=col.alpha(rangi2, 0.5))
# plot the MAP line, aka the mean mu for each weight
lines(weight.seq, mu.mean)
# plot a shaded region for 95% HPPDI
shade(mu.HPDI, weight.seq)
# The same could have been done using the link function
mu <- link(data.reg ,data=data.frame(weight=weight.seq), n=1e4 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, data, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
data$height <- log(data$height)
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(0.449, 0.019),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 0.02)), data=data
)
data$height <- log(data$height)
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(0.449, 0.019),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 1)), data=data
)
data$height <- log(data$height)
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(0.449, 0.019),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 2)), data=data
)
# Manipulación de estructuras
library(tidyverse)
library(dplyr)
library(tidyr)
# Para realizar plots
library(scatterplot3d)
library(ggplot2)
library(plotly)
# Manipulación de varios plots en una imagen.
library(gridExtra)
# Análisis bayesiano
library("rethinking")
# Leemos los datos de la tabla
data_alturas <- read.csv("table_height.csv")
head(data_alturas)
# Generamos un histograma de los datos
hist(data_alturas$age)
# Apartamos a los menores de 5 años del estudio
data <- data_alturas[data_alturas$age >= 5,]
# Creamos un histograma de las alturas para estimar distribuciones
hist(data$weight)
print(paste("weight mean: ", mean(data$weight)))
print(paste("weight sd: ", sd(data$weight)))
hist(data$height)
print(paste("height mean: ",mean(data$height)))
print(paste("height sd: ",sd(data$height)))
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(122.5, 18),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 20)), data=data
)
precis(data.reg, prob = 0.95)
# samples from the posterior
post <- extract.samples(data.reg, n= 1e4 )
library(MASS)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=10 , to=50 , by=1 )
# Let's implement link ourselves
mu.link <- function(weight) post$b0 + post$b1*weight
mu <- sapply( weight.seq , mu.link )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
plot(height ~ weight , data=data , col=col.alpha(rangi2, 0.5))
# plot the MAP line, aka the mean mu for each weight
lines(weight.seq, mu.mean)
# plot a shaded region for 95% HPPDI
shade(mu.HPDI, weight.seq)
# The same could have been done using the link function
mu <- link(data.reg ,data=data.frame(weight=weight.seq), n=1e4 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, data, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
data$height <- log(data$height)
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(0.449, 0.019),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 0.02)), data=data
)
# Leemos los datos de la tabla
data_alturas <- read.csv("table_height.csv")
head(data_alturas)
# Generamos un histograma de los datos
hist(data_alturas$age)
# Apartamos a los menores de 5 años del estudio
data <- data_alturas[data_alturas$age >= 5,]
# Creamos un histograma de las alturas para estimar distribuciones
hist(data$weight)
print(paste("weight mean: ", mean(data$weight)))
print(paste("weight sd: ", sd(data$weight)))
hist(data$height)
print(paste("height mean: ",mean(data$height)))
print(paste("height sd: ",sd(data$height)))
data$height <- log(data$height)
print(paste("weight mean: ", mean(data$weight)))
print(paste("weight sd: ", sd(data$weight)))
print(paste("height mean: ",mean(data$height)))
print(paste("height sd: ",sd(data$height)))
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(0.449, 0.019),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 20)), data=data
)
# samples from the posterior
post <- extract.samples(data.reg, n= 1e4 )
library(MASS)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=10 , to=50 , by=1 )
# Let's implement link ourselves
mu.link <- function(weight) post$b0 + post$b1*weight
mu <- sapply( weight.seq , mu.link )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
plot(height ~ weight , data=data , col=col.alpha(rangi2, 0.5))
# plot the MAP line, aka the mean mu for each weight
lines(weight.seq, mu.mean)
# plot a shaded region for 95% HPPDI
shade(mu.HPDI, weight.seq)
# The same could have been done using the link function
mu <- link(data.reg ,data=data.frame(weight=weight.seq), n=1e4 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, data, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
# Manipulación de estructuras
library(tidyverse)
library(dplyr)
library(tidyr)
# Para realizar plots
library(scatterplot3d)
library(ggplot2)
library(plotly)
# Manipulación de varios plots en una imagen.
library(gridExtra)
# Análisis bayesiano
library("rethinking")
# Leemos los datos de la tabla
data_alturas <- read.csv("table_height.csv")
head(data_alturas)
# Generamos un histograma de los datos
hist(data_alturas$age)
# Apartamos a los menores de 5 años del estudio
data <- data_alturas[data_alturas$age >= 5,]
# Creamos un histograma de las alturas para estimar distribuciones
hist(data$weight)
print(paste("weight mean: ", mean(data$weight)))
print(paste("weight sd: ", sd(data$weight)))
hist(data$height)
print(paste("height mean: ",mean(data$height)))
print(paste("height sd: ",sd(data$height)))
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(122.5, 18),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 20)), data=data
)
precis(data.reg, prob = 0.95)
# samples from the posterior
post <- extract.samples(data.reg, n= 1e4 )
library(MASS)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=10 , to=50 , by=1 )
# Let's implement link ourselves
mu.link <- function(weight) post$b0 + post$b1*weight
mu <- sapply( weight.seq , mu.link )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
plot(height ~ weight , data=data , col=col.alpha(rangi2, 0.5))
# plot the MAP line, aka the mean mu for each weight
lines(weight.seq, mu.mean)
# plot a shaded region for 95% HPPDI
shade(mu.HPDI, weight.seq)
# The same could have been done using the link function
mu <- link(data.reg ,data=data.frame(weight=weight.seq), n=1e4 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, data, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
data$height <- log(data$height)
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(4.797, 0.143),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 0.2)), data=data
)
# samples from the posterior
post <- extract.samples(data.reg, n= 1e4 )
library(MASS)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=10 , to=50 , by=1 )
# Let's implement link ourselves
mu.link <- function(weight) post$b0 + post$b1*weight
mu <- sapply( weight.seq , mu.link )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
plot(height ~ weight , data=data , col=col.alpha(rangi2, 0.5))
# plot the MAP line, aka the mean mu for each weight
lines(weight.seq, mu.mean)
# plot a shaded region for 95% HPPDI
shade(mu.HPDI, weight.seq)
# The same could have been done using the link function
mu <- link(data.reg ,data=data.frame(weight=weight.seq), n=1e4 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, data, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
View(data)
# Manipulación de estructuras
library(tidyverse)
library(dplyr)
library(tidyr)
# Para realizar plots
library(scatterplot3d)
library(ggplot2)
library(plotly)
# Manipulación de varios plots en una imagen.
library(gridExtra)
# Análisis bayesiano
library("rethinking")
# Leemos los datos de la tabla
data_alturas <- read.csv("table_height.csv")
head(data_alturas)
# Generamos un histograma de los datos
hist(data_alturas$age)
# Apartamos a los menores de 5 años del estudio
data <- data_alturas[data_alturas$age >= 5,]
# Creamos un histograma de las alturas para estimar distribuciones
hist(data$weight)
print(paste("weight mean: ", mean(data$weight)))
print(paste("weight sd: ", sd(data$weight)))
hist(data$height)
print(paste("height mean: ",mean(data$height)))
print(paste("height sd: ",sd(data$height)))
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(122.5, 18),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 20)), data=data
)
precis(data.reg, prob = 0.95)
# samples from the posterior
post <- extract.samples(data.reg, n= 1e4 )
library(MASS)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=10 , to=50 , by=1 )
# Let's implement link ourselves
mu.link <- function(weight) post$b0 + post$b1*weight
mu <- sapply( weight.seq , mu.link )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
plot(height ~ weight , data=data , col=col.alpha(rangi2, 0.5))
# plot the MAP line, aka the mean mu for each weight
lines(weight.seq, mu.mean)
# plot a shaded region for 95% HPPDI
shade(mu.HPDI, weight.seq)
# The same could have been done using the link function
mu <- link(data.reg ,data=data.frame(weight=weight.seq), n=1e4 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, data, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
data$height <- log(data$height)
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(4.797, 0.143),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 0.2)), data=data
)
# Manipulación de estructuras
library(tidyverse)
library(dplyr)
library(tidyr)
# Para realizar plots
library(scatterplot3d)
library(ggplot2)
library(plotly)
# Manipulación de varios plots en una imagen.
library(gridExtra)
# Análisis bayesiano
library("rethinking")
# Leemos los datos de la tabla
data_alturas <- read.csv("table_height.csv")
head(data_alturas)
# Generamos un histograma de los datos
hist(data_alturas$age)
# Apartamos a los menores de 5 años del estudio
data <- data_alturas[data_alturas$age >= 5,]
# Creamos un histograma de las alturas para estimar distribuciones
hist(data$weight)
print(paste("weight mean: ", mean(data$weight)))
print(paste("weight sd: ", sd(data$weight)))
hist(data$height)
print(paste("height mean: ",mean(data$height)))
print(paste("height sd: ",sd(data$height)))
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(122.5, 18),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 20)), data=data
)
precis(data.reg, prob = 0.95)
# samples from the posterior
post <- extract.samples(data.reg, n= 1e4 )
library(MASS)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=10 , to=50 , by=1 )
# Let's implement link ourselves
mu.link <- function(weight) post$b0 + post$b1*weight
mu <- sapply( weight.seq , mu.link )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
plot(height ~ weight , data=data , col=col.alpha(rangi2, 0.5))
# plot the MAP line, aka the mean mu for each weight
lines(weight.seq, mu.mean)
# plot a shaded region for 95% HPPDI
shade(mu.HPDI, weight.seq)
# The same could have been done using the link function
mu <- link(data.reg ,data=data.frame(weight=weight.seq), n=1e4 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, data, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
data$height <- log(data$height)
hist(data$weight)
print(paste("weight mean: ", mean(data$weight)))
print(paste("weight sd: ", sd(data$weight)))
hist(data$height)
print(paste("height mean: ",mean(data$height)))
print(paste("height sd: ",sd(data$height)))
data.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(4.797, 0.143),
b1 ~ dnorm(0, 1),
sigma ~ dunif(0, 0.2)), data=data
)
# samples from the posterior
post <- extract.samples(data.reg, n= 1e4 )
library(MASS)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=10 , to=50 , by=1 )
# Let's implement link ourselves
mu.link <- function(weight) post$b0 + post$b1*weight
mu <- sapply( weight.seq , mu.link )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
plot(height ~ weight , data=data , col=col.alpha(rangi2, 0.5))
# plot the MAP line, aka the mean mu for each weight
lines(weight.seq, mu.mean)
# plot a shaded region for 95% HPPDI
shade(mu.HPDI, weight.seq)
# The same could have been done using the link function
mu <- link(data.reg ,data=data.frame(weight=weight.seq), n=1e4 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, data, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
